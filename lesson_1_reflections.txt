How did viewing a diff between two versions of a file help you see the bug that was introduced?
It was easy to pinpoint where exactly the differences were and then focus just on that area to make sure the errors were corrected.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Being able to view changes from one version to the next, you don't need to worry about making mistakes, since earlier working versions are easily recoverable.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
The pro is that you have complete control of what gets saved, the size of the change, and the frequency.  The con is, if you forget, then you are SOL.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Git is more for saving code projects, which often span multiple files, each reliant on each other.  Google Docs is for saving stand-alone documents.

How can you use the commands git log and git diff to view the history of files?
git log displays a list of all changes that were committed.  git diff shows the differences between two commits.

How might using version control make you more confident to make changes that could break something?
You can take more risks.

Now that you have your workspace set up, what do you want to try using Git for?
For iOS, Android, and web projects.
